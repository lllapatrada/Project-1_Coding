import tkinter as tk
from tkinter import messagebox

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì RER, MER, MAX_energy
def calculate():
    try:
        # ‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        weigh = float(weight_entry.get())
        RER = 70 * weigh ** 0.75
        RER_label.config(text=f"RER: {RER:.2f} kcal üêæ")

        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
        animal_type = animal_choice.get()
        if animal_type == 1:
            factor = 2.0
        elif animal_type == 2:
            factor = 1.5
        elif animal_type == 3:
            factor = 1.7
        elif animal_type == 4:
            factor = 1.5
        elif animal_type == 5:
            factor = 2.0
        elif animal_type == 6:
            factor = 5.0
        elif animal_type == 7:
            factor = 1.0
        elif animal_type == 8:
            factor = 3.0
        else:
            factor = 1.0

        MER = RER * factor
        MER_label.config(text=f"MER: {MER:.2f} kcal/day üêï")

        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå
        food_brand = food_choice.get()
        if food_brand == 1:
            brand_factor = 1.7
        elif food_brand == 2:
            brand_factor = 3.2
        else:
            brand_factor = 1.0

        MAX_energy = MER / brand_factor
        MAX_energy_label.config(text=f"MAX Energy: {MAX_energy:.2f} g/day üçΩÔ∏è")

    except ValueError:
        messagebox.showerror("Error", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á üòû")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
root = tk.Tk()
root.title("‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á üêæ")
root.geometry("400x600")
root.config(bg="#F4C2C2")

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
label = tk.Label(root, text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°) üê±:", font=("Arial", 14), bg="#F4C2C2", fg="#1E90FF")
label.pack(pady=10)

# ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
weight_entry = tk.Entry(root, font=("Arial", 14))
weight_entry.pack(pady=10)

# ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
animal_label = tk.Label(root, text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå üê∂:", font=("Arial", 14), bg="#F4C2C2", fg="#FF69B4")
animal_label.pack(pady=10)

animal_choice = tk.IntVar()
animal_options = [
    "‡∏•‡∏π‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏≠‡∏≤‡∏¢‡∏∏‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 4 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô üçº", 
    "‡∏•‡∏π‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏≠‡∏≤‡∏¢‡∏∏ 4-6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô üêæ", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÇ‡∏ï‡πÄ‡∏ï‡πá‡∏°‡∏ß‡∏±‡∏¢ (‡∏ó‡∏≥‡∏´‡∏°‡∏±‡∏ô‡πÄ‡πÄ‡∏•‡πâ‡∏ß) üêï", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÇ‡∏ï‡πÄ‡∏ï‡πá‡∏°‡∏ß‡∏±‡∏¢ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏´‡∏°‡∏±‡∏ô) üêà", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÉ‡∏ä‡πâ‡πÄ‡πÄ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á üí™", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÉ‡∏ä‡πâ‡πÄ‡πÄ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏°‡∏≤‡∏Å üî•", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å üêæ", 
    "‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏£‡∏†‡πå/‡πÅ‡∏°‡πà‡∏•‡∏π‡∏Å‡∏≠‡πà‡∏≠‡∏ô ü§∞"
]

for i, option in enumerate(animal_options):
    tk.Radiobutton(root, text=option, variable=animal_choice, value=i+1, font=("Arial", 12), bg="#F4C2C2", fg="#FF69B4").pack()

# ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå
food_label = tk.Label(root, text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå üç≤:", font=("Arial", 14), bg="#F4C2C2", fg="#1E90FF")
food_label.pack(pady=10)

food_choice = tk.IntVar()
food_options = ["Smartheart üêæ", "Pedigree üê∂"]
for i, option in enumerate(food_options):
    tk.Radiobutton(root, text=option, variable=food_choice, value=i+1, font=("Arial", 12), bg="#F4C2C2", fg="#1E90FF").pack()

# ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
calculate_button = tk.Button(root, text="‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ‚ú®", font=("Arial", 14), bg="#FF69B4", fg="white", command=calculate)
calculate_button.pack(pady=20)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
RER_label = tk.Label(root, text="RER: 0 kcal", font=("Arial", 14), bg="#F4C2C2", fg="#1E90FF")
RER_label.pack(pady=10)

MER_label = tk.Label(root, text="MER: 0 kcal/day", font=("Arial", 14), bg="#F4C2C2", fg="#FF69B4")
MER_label.pack(pady=10)

MAX_energy_label = tk.Label(root, text="MAX Energy: 0 g/day", font=("Arial", 14), bg="#F4C2C2", fg="#1E90FF")
MAX_energy_label.pack(pady=10)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô UI
root.mainloop()
